## Tetra, a clean MVC javascript framework

Tetra aims to help developers build faster, more maintainable and better structured code.

Tetra is a complete MVC (Model, View, Controller) framework, normalizing all implementations through a simple structure that splits the code into 3 different layers :
   * [View](https://github.com/viadeo/tetra/wiki/View-layer): DOM access and UX behaviors
   * [Controller](https://github.com/viadeo/tetra/wiki/Controller-layer): Programmatic logic
   * [Model](https://github.com/viadeo/tetra/wiki/Model-layer): Structured data and Ajax requests

Each layer has access to a communication pipe linked to a potential listener, allowing asynchronous communication between each part of the application.

The Tetra.js framework is also Object-oriented, encouraging the developer to better separate and organise structured data and its associated logic. An [ORM &#40;Object-Relational Mapping&#41;](https://github.com/viadeo/tetra/wiki/ORM:-Object-Relational-Mapping) encapsulates Ajax transactions and ensures data consistency between front- and back-end.

Additionally, the "[bootnode](https://github.com/viadeo/tetra/wiki/Bootnode)" feature allows JavaScript resources to be loaded dynamically, either through data attributes set on DOM nodes or via a dependency management system.

Slides about Tetra.js & Tetra UI for a quick overview:
<http://viadeo.github.com/tetra-slides/2012-11-20/>
